// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  window.Hoge = (function() {
    function Hoge(options) {
      this.onScroll = __bind(this.onScroll, this);
      this.header = options.$header;
      this.target = options.$target;
      this.position = options.position;
      this.type = options.moveaction;
      this.targetThrough = options.through;
      this.$window = $(window);
      this.existing = false;
      this.animating = false;
      this.lastPosition = this.$window.scrollTop();
      this.latestPosition = this.$window.scrollTop();
      this.paramsCheck();
      $('.ss-header-none').css(this.hideParams);
      $('.ss-header-exist').css(this.showParams);
    }

    Hoge.prototype.paramsCheck = function() {
      if (this.position === 'top') {
        this.showParams = {
          'top': '0'
        };
        return this.hideParams = {
          'top': -this.header.outerHeight()
        };
      } else if (this.position === 'bottom') {
        this.showParams = {
          'bottom': '0'
        };
        return this.hideParams = {
          'bottom': -this.header.outerHeight()
        };
      }
    };

    Hoge.prototype.isLowerThanTarget = function() {
      return this.$window.scrollTop() > this.target.offset().top + this.targetThrough;
    };

    Hoge.prototype.isScrollDown = function() {
      return this.latestPosition - this.lastPosition > -1;
    };

    Hoge.prototype.hideHeader = function() {
      var complete, duration, easing;
      console.log('hideheader');
      this.animating = true;
      this.header.addClass('ss-header-animating');
      duration = 400;
      easing = 'swing';
      complete = function() {
        this.existing = false;
        this.animating = false;
        this.header.addClass('ss-header-none');
        this.header.removeClass('ss-header-exist');
        return this.header.removeClass('ss-animating');
      };
      if (this.type === 'animate') {
        return $('.ss-header-exist').animate(this.hideParams, duration, easing, this.complete);
      }
    };

    Hoge.prototype.showHeader = function() {
      var duration, easing;
      console.log('showheader');
      this.animating = true;
      this.header.addClass('ss-header-animating');
      duration = 400;
      easing = 'swing';
      ({
        complete: function() {
          this.existing = true;
          this.animating = false;
          this.header.addClass('ss-header-exist');
          this.header.removeClass('ss-header-none');
          return this.header.removeClass('ss-header-animating');
        }
      });
      if (this.type === 'animate') {
        return $('.ss-header-none').animate(this.showParams, duration, easing, this.complete);
      }
    };

    Hoge.prototype.onScroll = function() {
      var e;
      console.log('onscroll');
      this.latestPosition = this.$window.scrollTop();
      if (this.isLowerThanTarget()) {
        if (this.isScrollDown()) {
          if (this.existing && !this.animating) {
            console.log('scrolluptodown');
            e = $.Event('scrolluptodown');
            this.$window.trigger(e);
          }
        } else {
          if (!this.existing && !this.animating) {
            console.log('scrolldowntoup');
            e = $.Event('scrolldowntoup');
            this.$window.trigger(e);
          }
        }
      } else {
        if (this.existing && !this.animating) {
          console.log('beforetargetexisting');
          e = $.Event('beforetargetexisting');
          this.$window.trigger(e);
        } else if (!this.existing && !this.animating) {
          console.log('beforetargetnone');
          e = $.Event('beforetargetnone');
          this.$window.trigger(e);
        }
      }
      return this.lastPosition = this.$window.scrollTop();
    };

    return Hoge;

  })();

}).call(this);
